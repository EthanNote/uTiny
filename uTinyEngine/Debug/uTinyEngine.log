  Vector3.cpp
  Transform.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Time.cpp
h:\myprojects\utiny\utinyengine\src\time.cpp(13): warning C4244: “return”: 从“double”转换到“float”，可能丢失数据
  Texture.cpp
  TextRenderer.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\textrenderer.h(15): warning C4251: “TextRenderer::text”: class“std::vector<wchar_t,std::allocator<wchar_t>>”需要有 dll 接口由 class“TextRenderer”的客户端使用
  h:\myprojects\utiny\utinyengine\include\textrenderer.h(15): note: 参见“std::vector<wchar_t,std::allocator<wchar_t>>”的声明
h:\myprojects\utiny\utinyengine\include\textrenderer.h(16): warning C4251: “TextRenderer::font”: class“std::shared_ptr<Font>”需要有 dll 接口由 class“TextRenderer”的客户端使用
  h:\myprojects\utiny\utinyengine\include\textrenderer.h(16): note: 参见“std::shared_ptr<Font>”的声明
  Script.cpp
  Scene.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Renderer.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Mesh.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Material.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(31): warning C4251: “Material::texture”: class“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(31): note: 参见“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
h:\myprojects\utiny\utinyengine\include\material.h(32): warning C4251: “Material::uvTransform”: class“std::shared_ptr<UVTransform>”需要有 dll 接口由 class“Material”的客户端使用
  h:\myprojects\utiny\utinyengine\include\material.h(32): note: 参见“std::shared_ptr<UVTransform>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(33): warning C4251: “Material::parameters”: class“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): warning C4200: 使用了非标准扩展: 结构/联合中的零大小数组
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): note: 默认构造函数或 copy/move 赋值运算符将忽略此成员
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1103): note: 参见对正在编译的类 模板 实例化“std::pair<const _Kty,_Ty>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1102): note: 编译类 模板 成员函数“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”时
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(154): note: 参见对正在编译的函数 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(73): note: 参见对正在编译的类 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见对正在编译的类 模板 实例化“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  Input.cpp
  GLUT.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(31): warning C4251: “Material::texture”: class“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(31): note: 参见“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
h:\myprojects\utiny\utinyengine\include\material.h(32): warning C4251: “Material::uvTransform”: class“std::shared_ptr<UVTransform>”需要有 dll 接口由 class“Material”的客户端使用
  h:\myprojects\utiny\utinyengine\include\material.h(32): note: 参见“std::shared_ptr<UVTransform>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(33): warning C4251: “Material::parameters”: class“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
h:\myprojects\utiny\utinyengine\include\game.h(17): warning C4251: “Game::scene”: class“std::unique_ptr<Scene,std::default_delete<_Ty>>”需要有 dll 接口由 class“Game”的客户端使用
          with
          [
              _Ty=Scene
          ]
  h:\myprojects\utiny\utinyengine\include\game.h(17): note: 参见“std::unique_ptr<Scene,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=Scene
          ]
h:\myprojects\utiny\utinyengine\include\console.h(16): warning C4251: “Console::content”: class“std::list<std::vector<wchar_t,std::allocator<wchar_t>>,std::allocator<_Ty>>”需要有 dll 接口由 class“Console”的客户端使用
          with
          [
              _Ty=std::vector<wchar_t,std::allocator<wchar_t>>
          ]
  h:\myprojects\utiny\utinyengine\include\console.h(16): note: 参见“std::list<std::vector<wchar_t,std::allocator<wchar_t>>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::vector<wchar_t,std::allocator<wchar_t>>
          ]
h:\myprojects\utiny\utinyengine\src\glut.cpp(81): warning C4838: 从“double”转换到“GLfloat”需要收缩转换
h:\myprojects\utiny\utinyengine\src\glut.cpp(81): warning C4305: “初始化”: 从“double”到“GLfloat”截断
h:\myprojects\utiny\utinyengine\src\glut.cpp(319): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(320): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(322): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(323): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(325): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(326): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(328): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(329): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(333): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(336): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(339): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(343): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(347): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(351): warning C4244: “参数”: 从“int”转换到“GLfloat”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(404): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(405): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\glut.cpp(406): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): warning C4200: 使用了非标准扩展: 结构/联合中的零大小数组
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): note: 默认构造函数或 copy/move 赋值运算符将忽略此成员
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1103): note: 参见对正在编译的类 模板 实例化“std::pair<const _Kty,_Ty>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1102): note: 编译类 模板 成员函数“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”时
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(154): note: 参见对正在编译的函数 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(73): note: 参见对正在编译的类 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见对正在编译的类 模板 实例化“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  GameObject.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Game.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(31): warning C4251: “Material::texture”: class“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(31): note: 参见“std::vector<std::shared_ptr<Texture>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Texture>
          ]
h:\myprojects\utiny\utinyengine\include\material.h(32): warning C4251: “Material::uvTransform”: class“std::shared_ptr<UVTransform>”需要有 dll 接口由 class“Material”的客户端使用
  h:\myprojects\utiny\utinyengine\include\material.h(32): note: 参见“std::shared_ptr<UVTransform>”的声明
h:\myprojects\utiny\utinyengine\include\material.h(33): warning C4251: “Material::parameters”: class“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”需要有 dll 接口由 class“Material”的客户端使用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的声明
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
h:\myprojects\utiny\utinyengine\include\game.h(17): warning C4251: “Game::scene”: class“std::unique_ptr<Scene,std::default_delete<_Ty>>”需要有 dll 接口由 class“Game”的客户端使用
          with
          [
              _Ty=Scene
          ]
  h:\myprojects\utiny\utinyengine\include\game.h(17): note: 参见“std::unique_ptr<Scene,std::default_delete<_Ty>>”的声明
          with
          [
              _Ty=Scene
          ]
c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): warning C4200: 使用了非标准扩展: 结构/联合中的零大小数组
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(246): note: 默认构造函数或 copy/move 赋值运算符将忽略此成员
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1103): note: 参见对正在编译的类 模板 实例化“std::pair<const _Kty,_Ty>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree(1102): note: 编译类 模板 成员函数“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”时
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(154): note: 参见对正在编译的函数 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>::operator =(const std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>> &)”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\map(73): note: 参见对正在编译的类 模板 实例化“std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float [],
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float []>>
          ]
  h:\myprojects\utiny\utinyengine\include\material.h(33): note: 参见对正在编译的类 模板 实例化“std::map<std::string,float [],std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>”的引用
          with
          [
              _Kty=std::string,
              _Ty=float []
          ]
  Font.cpp
h:\myprojects\utiny\utinyengine\src\freetype\include\freetype\freetype.h(2668): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
  FBX.cpp
h:\myprojects\utiny\utinyengine\src\fbx.cpp(294): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(295): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(296): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(298): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(299): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(300): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(302): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(303): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
h:\myprojects\utiny\utinyengine\src\fbx.cpp(304): warning C4244: “=”: 从“fbxsdk::FbxDouble”转换到“float”，可能丢失数据
  Console.cpp
h:\myprojects\utiny\utinyengine\include\console.h(16): warning C4251: “Console::content”: class“std::list<std::vector<wchar_t,std::allocator<wchar_t>>,std::allocator<_Ty>>”需要有 dll 接口由 class“Console”的客户端使用
          with
          [
              _Ty=std::vector<wchar_t,std::allocator<wchar_t>>
          ]
  h:\myprojects\utiny\utinyengine\include\console.h(16): note: 参见“std::list<std::vector<wchar_t,std::allocator<wchar_t>>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::vector<wchar_t,std::allocator<wchar_t>>
          ]
h:\myprojects\utiny\utinyengine\src\console.cpp(73): warning C4018: “<=”: 有符号/无符号不匹配
  Component.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  Camera.cpp
h:\myprojects\utiny\utinyengine\include\component.h(23): warning C4251: “Component::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“Component”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(21): warning C4251: “GameObject::parent”: class“std::shared_ptr<GameObject>”需要有 dll 接口由 class“GameObject”的客户端使用
  h:\myprojects\utiny\utinyengine\include\gameobject.h(21): note: 参见“std::shared_ptr<GameObject>”的声明
h:\myprojects\utiny\utinyengine\include\gameobject.h(22): warning C4251: “GameObject::children”: class“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(22): note: 参见“std::list<std::shared_ptr<GameObject>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<GameObject>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(23): warning C4251: “GameObject::components”: class“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”需要有 dll 接口由 class“GameObject”的客户端使用
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
  h:\myprojects\utiny\utinyengine\include\gameobject.h(23): note: 参见“std::list<std::shared_ptr<Component>,std::allocator<_Ty>>”的声明
          with
          [
              _Ty=std::shared_ptr<Component>
          ]
h:\myprojects\utiny\utinyengine\include\gameobject.h(27): warning C4251: “GameObject::name”: class“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口由 class“GameObject”的客户端使用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring(2628): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  正在生成代码...
    正在创建库 H:\myprojects\uTiny\Debug\uTinyEngine.lib 和对象 H:\myprojects\uTiny\Debug\uTinyEngine.exp
MSVCRTD.lib(initializers.obj) : warning LNK4098: 默认库“msvcrt.lib”与其他库的使用冲突；请使用 /NODEFAULTLIB:library
Font.obj : warning LNK4217: 本地定义的符号 ?SetPixel@Texture@@QAEXHH@Z (public: void __thiscall Texture::SetPixel(int,int)) 在函数 "public: class Texture * __thiscall Font::RenderChar(wchar_t)" (?RenderChar@Font@@QAEPAVTexture@@_W@Z) 中导入
Font.obj : warning LNK4217: 本地定义的符号 ?Create@Texture@@SAPAV1@HH@Z (public: static class Texture * __cdecl Texture::Create(int,int)) 在函数 "public: class Texture * __thiscall Font::RenderChar(wchar_t)" (?RenderChar@Font@@QAEPAVTexture@@_W@Z) 中导入
  uTinyEngine.vcxproj -> H:\myprojects\uTiny\Debug\uTinyEngine.dll
